\nevents {}

http {
    server {
        listen 80;
        server_name chamma.sytes.net localhost; # Replace with your actual domain
        # Optional: Redirect HTTP to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;
        server_name chamma.sytes.net localhost; # Replace with your actual domain

        ssl_certificate /etc/ssl/certs/cert.pem; # Path inside Nginx container
        ssl_certificate_key /etc/ssl/private/key.pem; # Path inside Nginx container

        # SSL settings (optional, but recommended)
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers off;
        ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';

        # Serve Vue.js frontend (built static files)
        location / {
            root /usr/share/nginx/html;
            try_files $uri $uri/ /index.html;
        }

        # Proxy API requests to the Flask backend
        location /api/ {
            proxy_pass http://python-app:5000/; # Ensure trailing slash if your backend expects it
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # Optional: Add rewrite to remove /api prefix if backend doesn't expect it
            # rewrite ^/api/(.*)$ /$1 break;
        }

        # Optional: Add other locations or configurations as needed
    }
}
